package com.ch4.AbstractTest;

public abstract class AbstractTestClass1 {
    //抽象类的概念和用法理解

    //以一个学生类为例，理解抽象的概念
    int age;
    String name;

    //功能定义
    public void eat() {

    }

    /*
    * 比如说听课的功能，就有点怪。比如说，听课不按时间来
    * 大半夜的一个人坐教室。。。可以这么理解，听课的功能不完整、不正常
    * */
    /*
    * 对于这样的空实现的方法，结构完整，可以理解为上课来，但不听，不过该功能表面还正常。
    *
    * 对于听课功能，连表面都做不到，不正常的，对应的方法中，定义就不完整
    * 表现在不能写{},还要符合语句规则，后面加上；
    * */
   /* public void tingke() {

    }*/


    /*
    * 从正能量方面重新理解抽象方法，学生听课的功能，没办法一次性地写具体了，因为艺术、软件、体育、
    * 等专业的学习，听课都不相同，只能具体情况，具体对应解决
    *
    *
    * 抽象方法是一种约束，规范。这里就规定者，是学生类，就必须能去听课，
    * 但是怎么听，由子类具体去实现
    * */
    abstract void tingke();

    /*
    * 抽象类 不能直接实例化使用，必须派生子类
    * */






}

